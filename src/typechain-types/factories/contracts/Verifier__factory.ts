/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Verifier, VerifierInterface } from "../../contracts/Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "input",
        type: "uint256[2]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061113f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f5c9d69e14610030575b600080fd5b61004361003e366004610fc5565b610057565b604051901515815260200160405180910390f35b6000610061610dee565b60408051808201825287518152602080890151818301529083528151608081018352875151818401908152885183015160608084019190915290825283518085018552898401805151825251840151818501528284015284830191909152825180840184528751815287830151818401528484015282516002808252918101845260009390928301908036833701905050905060005b60028110156101465784816002811061011257610112611065565b602002015182828151811061012957610129611065565b60209081029190910101528061013e81611091565b9150506100f7565b506101518183610172565b6000036101635760019250505061016a565b6000925050505b949350505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018161019e610374565b9050806080015151855160016101b491906110aa565b146102065760405162461bcd60e51b815260206004820152601260248201527f76657269666965722d6261642d696e707574000000000000000000000000000060448201526064015b60405180910390fd5b604080518082019091526000808252602082018190525b86518110156102f7578387828151811061023957610239611065565b60200260200101511061028e5760405162461bcd60e51b815260206004820152601f60248201527f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c640060448201526064016101fd565b6102e3826102de85608001518460016102a791906110aa565b815181106102b7576102b7611065565b60200260200101518a85815181106102d1576102d1611065565b6020026020010151610718565b6107b9565b9150806102ef81611091565b91505061021d565b5061032081836080015160008151811061031357610313611065565b60200260200101516107b9565b9050610356610332866000015161085d565b8660200151846000015185602001518587604001518b6040015189606001516108fc565b610366576001935050505061036e565b600093505050505b92915050565b61037c610e3f565b6040805180820182527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e281527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d19266020808301919091529083528151608080820184527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c8285019081527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab606080850191909152908352845180860186527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a781527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8818601528385015285840192909252835180820185527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28186018181527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed838601819052908352865180880188527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b8082527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa828901819052858901929092528989019490945287518086018952808901938452808701929092529181528651808801885292835282860191909152938401529084019190915281516003808252918101909252816020015b604080518082019091526000808252602082015281526020019060019003908161058957505060808201908152604080518082019091527f020163e70c56f84f120db0a5c8fdb675a5233d4474d7b7d5ea96b2e3c32d16fe81527f1e732adbfb31f1fd6dea615e4304ac3372bc61d274a353bd34318f3f9d75735d60208201529051805160009061061c5761061c611065565b602002602001018190525060405180604001604052807f20bd1d187556a6d75fbb47ee23481ee36d1e8f81bf10043e5bffc1cd8536e4c281526020017f0266d8972ad53bba47b7f1337379b3d03434bc442a49cbd9b910f44c7dd6f8d5815250816080015160018151811061069357610693611065565b602002602001018190525060405180604001604052807f09bf9264ae6f2136a12436bc78419bf4428fb9516943a3dc8a298fe798d26e6881526020017f1cbf01b537141584b3b4775016a4653f566ec617331e2ad44c10657ec8f91d97815250816080015160028151811061070a5761070a611065565b602002602001018190525090565b6040805180820190915260008082526020820152610734610e90565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa9050808061076357fe5b50806107b15760405162461bcd60e51b815260206004820152601260248201527f70616972696e672d6d756c2d6661696c6564000000000000000000000000000060448201526064016101fd565b505092915050565b60408051808201909152600080825260208201526107d5610eae565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa9050808061080f57fe5b50806107b15760405162461bcd60e51b815260206004820152601260248201527f70616972696e672d6164642d6661696c6564000000000000000000000000000060448201526064016101fd565b604080518082019091526000808252602082015281517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47901580156108a457506020830151155b156108c45750506040805180820190915260008082526020820152919050565b6040518060400160405280846000015181526020018285602001516108e991906110bd565b6108f390846110df565b90529392505050565b60408051600480825260a08201909252600091829190816020015b604080518082019091526000808252602082015281526020019060019003908161091757505060408051600480825260a0820190925291925060009190602082015b610961610ecc565b8152602001906001900390816109595790505090508a8260008151811061098a5761098a611065565b602002602001018190525088826001815181106109a9576109a9611065565b602002602001018190525086826002815181106109c8576109c8611065565b602002602001018190525084826003815181106109e7576109e7611065565b60200260200101819052508981600081518110610a0657610a06611065565b60200260200101819052508781600181518110610a2557610a25611065565b60200260200101819052508581600281518110610a4457610a44611065565b60200260200101819052508381600381518110610a6357610a63611065565b6020026020010181905250610a788282610a87565b9b9a5050505050505050505050565b60008151835114610ada5760405162461bcd60e51b815260206004820152601660248201527f70616972696e672d6c656e677468732d6661696c65640000000000000000000060448201526064016101fd565b82516000610ae98260066110f2565b905060008167ffffffffffffffff811115610b0657610b06610f28565b604051908082528060200260200182016040528015610b2f578160200160208202803683370190505b50905060005b83811015610d6a57868181518110610b4f57610b4f611065565b60200260200101516000015182826006610b6991906110f2565b610b749060006110aa565b81518110610b8457610b84611065565b602002602001018181525050868181518110610ba257610ba2611065565b60200260200101516020015182826006610bbc91906110f2565b610bc79060016110aa565b81518110610bd757610bd7611065565b602002602001018181525050858181518110610bf557610bf5611065565b6020908102919091010151515182610c0e8360066110f2565b610c199060026110aa565b81518110610c2957610c29611065565b602002602001018181525050858181518110610c4757610c47611065565b60209081029190910181015151015182610c628360066110f2565b610c6d9060036110aa565b81518110610c7d57610c7d611065565b602002602001018181525050858181518110610c9b57610c9b611065565b602002602001015160200151600060028110610cb957610cb9611065565b602002015182610cca8360066110f2565b610cd59060046110aa565b81518110610ce557610ce5611065565b602002602001018181525050858181518110610d0357610d03611065565b602002602001015160200151600160028110610d2157610d21611065565b602002015182610d328360066110f2565b610d3d9060056110aa565b81518110610d4d57610d4d611065565b602090810291909101015280610d6281611091565b915050610b35565b50610d73610eec565b6000602082602086026020860160086107d05a03fa90508080610d9257fe5b5080610de05760405162461bcd60e51b815260206004820152601560248201527f70616972696e672d6f70636f64652d6661696c6564000000000000000000000060448201526064016101fd565b505115159695505050505050565b6040805160a081019091526000606082018181526080830191909152815260208101610e18610ecc565b8152602001610e3a604051806040016040528060008152602001600081525090565b905290565b6040805160e08101909152600060a0820181815260c0830191909152815260208101610e69610ecc565b8152602001610e76610ecc565b8152602001610e83610ecc565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280610edf610f0a565b8152602001610e3a610f0a565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610f6f57634e487b7160e01b600052604160045260246000fd5b60405290565b600082601f830112610f8657600080fd5b610f8e610f3e565b806040840185811115610fa057600080fd5b845b81811015610fba578035845260209384019301610fa2565b509095945050505050565b6000806000806101408587031215610fdc57600080fd5b610fe68686610f75565b9350604086605f870112610ff957600080fd5b611001610f3e565b8060c088018981111561101357600080fd5b8389015b81811015611038576110298b82610f75565b84526020909301928401611017565b508196506110468a82610f75565b95505050505061105a866101008701610f75565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110a3576110a361107b565b5060010190565b8082018082111561036e5761036e61107b565b6000826110da57634e487b7160e01b600052601260045260246000fd5b500690565b8181038181111561036e5761036e61107b565b808202811582820484141761036e5761036e61107b56fea26469706673582212207220af5f65c4ee72955ff1e4f6d6a983729051228f1c068a57237a4094acee4764736f6c63430008110033";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Verifier> {
    return super.deploy(overrides || {}) as Promise<Verifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Verifier {
    return super.attach(address) as Verifier;
  }
  override connect(signer: Signer): Verifier__factory {
    return super.connect(signer) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new utils.Interface(_abi) as VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verifier {
    return new Contract(address, _abi, signerOrProvider) as Verifier;
  }
}
